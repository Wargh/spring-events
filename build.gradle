buildscript {
	ext {
		springBootVersion = '2.1.6.RELEASE'
	}
	repositories {
		mavenCentral()
		// maven { url "http://repo.spring.io/snapshot" }
		// maven { url "http://repo.spring.io/milestone" }
		jcenter() // for gradle-versions-plugin
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('com.github.ben-manes:gradle-versions-plugin:0.20.0')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions' // gradle dependencyUpdates

jar {
	baseName = 'spring-events'
	version = '1.0.0-SNAPSHOT'
}

sourceCompatibility = 11
targetCompatibility = 11

ext.testNGVersion = '6.14.3'

// Special syntax for overriding spring-boot-dependencies
// https://repo1.maven.org/maven2/org/springframework/boot/spring-boot-dependencies/2.1.3.RELEASE/spring-boot-dependencies-2.1.3.RELEASE.pom
// ext['hibernate.version']       = hibernateVersion
ext['junit-jupiter.version']   = '5.5.1'
// ext['spring-security.version'] = '5.0.8.RELEASE'
// ext['spring.version']          = '5.1.4.RELEASE'

repositories {
	mavenCentral()
	// maven { url "http://repo.spring.io/snapshot" }
	// maven { url "http://repo.spring.io/milestone" }
	jcenter() // for TestNG
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-data-jpa")
	compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.springframework.boot:spring-boot-starter-web")

	runtime("org.springframework.boot:spring-boot-starter-actuator")
	runtime("org.springframework.boot:spring-boot-starter-thymeleaf")
	runtime("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	runtime("com.h2database:h2")

	testCompile("org.springframework.boot:spring-boot-starter-test")
	testCompile("org.springframework.security:spring-security-test")
	testCompile("org.junit.jupiter:junit-jupiter-api")
	testCompile("org.junit.platform:junit-platform-runner")
	testCompile("org.testng:testng:${testNGVersion}")

	testRuntime("org.junit.jupiter:junit-jupiter-engine")
}

task junit(type: Test) {
	description = 'Runs tests on the JUnit Platform.'
	useJUnitPlatform()
	testLogging {
		// events "passed", "skipped", "failed", "standardOut", "standardError"
		events "passed", "skipped", "failed"
	}
	include '**/*Tests.class'
	exclude '**/*TestNg*.*'
}

task testNG(type: Test) {
	description = 'Runs TestNG tests.'
	useTestNG()
	scanForTestClasses = false
	include '**/*TestNgTests.class'
	// Show STD_OUT & STD_ERR of the test JVM(s) on the console:
	// testLogging.showStandardStreams = true
	// forkEvery 1
}

test {
	description = "Runs all tests."
	dependsOn junit, testNG
	exclude(["**/*.*"])
}

task aggregateTestReports(type: TestReport) {
	description = 'Aggregates JUnit and TestNG test reports.'
	destinationDir = test.reports.html.destination
	reportOn junit, testNG
}

check.dependsOn aggregateTestReports

wrapper {
	gradleVersion = '5.5.1'
}
